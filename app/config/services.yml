# Learn more about services, parameters and containers at
# http://symfony.com/doc/current/book/service_container.html
services:
    listing:
        class: AppBundle\Utils\Listing\Lister
        arguments:
            - @session
            - @doctrine.orm.entity_manager

    #parser:
    #    class: AppBundle\Utils\Accessor\Parser
    #    arguments:
    #        - @doctrine.orm.entity_manager


    jsonParser:
        class: AppBundle\Utils\Data\JsonParser
        arguments:
            - @router

    pdf:
        class: AppBundle\Utils\Export\Pdf
        arguments:
            - @kernel

    email:
        class: AppBundle\Utils\Email\Email


    #recuperation des parametres de l'application gérés par les utilisateurs
    parametres:
        class: AppBundle\Utils\Parametre\Parametres
        arguments:
            - @doctrine.orm.entity_manager
            - %intranet_parameters%

    #Permet le rendu des annotation @menu
    menu:
        class: AppBundle\Utils\Menu\MenuRenderer
        arguments:
            - @annotations.reader
            - @kernel
            - @router
    #Contient les listes stockée en session
    list_storage:
        class: AppBundle\Utils\ListUtils\ListStorage
        arguments:
            - @session
            - @doctrine.orm.entity_manager

    #Contient tout les listes crée: - Permet d'appeler les listes depuis twig - Permet d'appeler les liste depuis une route
    list_caller:
        class: AppBundle\Controller\ListCallerController
        arguments:
            - @service_container


    #Sauve un document uploader dans le bon dossier
    document_storage:
        class: AppBundle\Utils\Document\DocumentStorage
        arguments:
            - %app.upload_path%

    #analyse les fichier de facture fournit par la poste
    payement_file_parser:
        class: AppBundle\Utils\Finances\PayementFileParser

    #permet de faire un pdf avec une facture
    facture_printer:
        class: AppBundle\Utils\Finances\FacturePrinter
        arguments:
            - @doctrine.orm.entity_manager
            - @parametres
            - @pdf

    #permet de faire un pdf avec une facture
    app.search:
        class: AppBundle\Utils\Elastic\Search
        arguments:
            - @fos_elastica.manager


    # Twig
    # Extensions twig qui permettent de mettre en place des filtres
    # personnalisés
    app.twig.validation_extension:
        class: AppBundle\Twig\ValidationExtension
        arguments:
            - @router
            - @doctrine.orm.entity_manager
        tags:
            - { name: twig.extension }

    app.twig.groupby:
        class: AppBundle\Twig\GroupByExtension
        tags:
            - { name: twig.extension }

    app.twig.app_extension:
        class: AppBundle\Twig\AppExtension
        tags:
            - { name: twig.extension }

    app.twig.finances_extension:
        class: AppBundle\Twig\FinancesExtension
        tags:
            - { name: twig.extension }


    # Types
    # Ces services sont des FormTypes qui permettent d'accéder
    # aux types personnalisés plus facilement
    app.type.datepicker:
        class: AppBundle\Field\DatePickerType
        tags:
            - { name: form.type, alias: datepicker }

    app.type.semantic:
        class: AppBundle\Field\SemanticType
        tags:
            - { name: form.type, alias: semantic }

    app.type.genre:
        class: AppBundle\Field\GenreType
        tags:
            - { name: form.type, alias: genre }

    app.type.boolean:
        class: AppBundle\Field\BooleanType
        tags:
            - { name: form.type, alias: boolean }

    app.type.remarque_accordion:
        class: AppBundle\Field\RemarqueAccordionType
        tags:
            - { name: form.type, alias: remarque_accordion }

    app.type.dynamic_collection:
        class: AppBundle\Field\DynamicCollectionType
        tags:
            - { name: form.type, alias: dynamic_collection }



    #EVENTS
#    app.dynamic_relation_subscriber:
#        class: AppBundle\EventSubscriber\DynamicRelationSubscriber
#        tags:
#            - { name: doctrine.event_subscriber, connection: default }


    #Listener durant l'authentification.
    security.listener.authentification.successful:
        class: AppBundle\EventListener\AuthentificationListener
        arguments:
            - @security.token_storage
            - @doctrine.orm.entity_manager
            - @listing
        tags:
            - { name: kernel.event_listener, event: security.interactive_login, method: onAuthenticationSuccess }


    security.access.membre_voter:
            class:      AppBundle\Voters\MembreVoter
            public:     false
            tags:
                - { name: security.voter }

    security.access.famille_voter:
        class:      AppBundle\Voters\FamilleVoter
        public:     false
        tags:
            - { name: security.voter }

    security.access.groupe_voter:
        class:      AppBundle\Voters\GroupeVoter
        public:     false
        tags:
            - { name: security.voter }

    security.access.role_voter:
        class:      AppBundle\Voters\RoleHierarchyVoter
        public:     false
        tags:
            - { name: security.voter }
        arguments:
            - @doctrine.orm.entity_manager
            - @session