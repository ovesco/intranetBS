{% extends 'layout.html.twig' %}

{% import _self as macro %}

{% block titre %}{{ groupe.nom }}{% endblock %}

{% block content %}

    <div class="ui page grid">
        <div class="row">
            <div class="column">
                <div class="ui segment">

                    <div class="ui vertical segment">
                        {% for parent in groupe.parentsRecursive %}
                            {% if groupe.id != parent.id %}
                                <a href="{{ path('interne_voir_groupe', {groupe: parent.id}) }}" class="ui labeled blue basic button">{{ parent.nom }}</a>

                                {% if not loop.last %}
                                <i class="angle double right icon"></i>
                                {% endif %}
                            {% endif %}
                        {% endfor %}
                        <div class="ui green button">{{ groupe.nom }}</div>

                        {% if groupe.enfants is not empty %}
                            <i class="angle double right icon"></i>
                        {% endif %}

                        {% for enfant in groupe.enfants %}

                            <a href="{{ path('interne_voir_groupe', {groupe:enfant.id}) }}" class="ui labeled icon blue basic button">
                                <i class="users icon"></i>
                                {{ enfant.nom }}
                            </a>

                        {% endfor %}

                    </div>

                    <div class="ui vertical segment">
                        <div class="ui segment">
                            <h1>{{ groupe.nom|capitalize }}</h1>
                            <h3>{{ groupe.model.nom|capitalize }}</h3>

                            <div class="ui circular icon top left pointing dropdown mini blue button">
                                <i class="external link icon"></i>
                                <div class="menu">
                                    <div class="header">Exporter</div>
                                    <div class="item"><i class="file pdf outline icon"></i> Exporter en PDF</div>
                                    <div class="item"><i class="file excel outline icon"></i> Exporter en Excel</div>
                                    <div class="item"><i class="grid layout icon"></i> Génerer les étiquettes</div>
                                </div>
                            </div>


                            <div class="ui divided list">

                                <a class="item">
                                    <div class="right floated ui blue circular label">{{ groupe.members|length }}</div>
                                    <div class="content">
                                        <p>Effectifs direct</p>
                                    </div>
                                </a>

                                {% for enfant in groupe.enfants %}
                                    <a href="{{ path('interne_voir_groupe', {groupe: enfant.id}) }}" class="item">
                                        <div class="right floated ui blue circular label">{{ enfant.membersRecursive|length }}</div>
                                        <div class="content">
                                            <p>{{ enfant.nom }}</p>
                                        </div>
                                    </a>
                                {% endfor %}

                                <a class="item">
                                    <div class="right floated ui blue circular label">{{ groupe.membersRecursive|length }}</div>
                                    <div class="content">
                                        <p class="header">Effectifs total</p>
                                    </div>
                                </a>
                            </div>
                        </div>

                    </div>


                    <div class="ui vertical segment">

                        {{ macro.effectifs(groupe,listing) }}

                        {% if groupe.model.affichageEffectifs %}
                            {% for enfant in groupe.enfants %}
                                {{ macro.effectifs(enfant,listing) }}
                            {% endfor %}
                        {% endif %}

                    </div>

                </div>
            </div>
        </div>
    </div>


{% endblock %}


{% macro effectifs(groupe,listing) %}

    <h3>Effectifs détaillés: {{ groupe.nom|capitalize }} ({{ groupe.model.nom|capitalize }})</h3>

    {% set membres = groupe.members %}
    {% include ':Membre:liste.html.twig' %}

    <div class="ui floating dropdown labeled icon green button">
        <i class="list icon"></i>
        Ajouter (<span class="listing-update">0</span>)
        <div class="menu">
            <div class="header">
                Ajouter à une liste
            </div>
            {% for liste in listing.listes %}

                <div class="item" onclick="addToListing('{{ liste.token }}');">
                    {{ liste.name }}
                    <span class="description">{{ liste.length }}</span>
                </div>

            {% endfor %}
        </div>
    </div>

    <div onclick="deselectAll();" class="right floated ui labeled icon button">
        <i class="minus icon"></i>
        Tout désélectionner
    </div>

    <div onclick="selectAll();" class="right floated ui labeled icon button">
        <i class="plus icon"></i>
        Tout sélectionner
    </div>



{% endmacro %}

{% block js %}
    <script type="text/javascript">

        /**
         * on initialise la datatable des effectifs dans le cas où on doit l'initialiser. On met également en place les
         * différentes méthodes concernant le listing
         */
        var table = $('#effectifs-table').DataTable({
            "sDom": '<f><"flex"<l><p>>',
            "oLanguage": {
                "sEmptyTable": "Aucun résultats",
                "sSearch": "<span>Rechercher dans la liste :</span> _INPUT_",
                "oPaginate": { "sFirst": "Suivant", "sLast": "Précédent", "sNext": ">", "sPrevious": "<" }
            }
        });

        /**
         * Si on sélectionne une ligne de la table
         */
        $('#effectifs-table').on( 'click', 'tr', function () {

            $(this).toggleClass('selected');

            //On met à jour les endroits où on affiche le nombre de ligne cliquées

            var number = table.rows('.selected').data().length;
            $('.listing-update').text(number);
        } );


        /**
         * Permet d'ajouter les éléments sélectionnés au listing.
         * @param token string le token de la liste choisie
         */
        function addToListing(token) {

            var rows  = table.rows('.selected').nodes(),
                ids   = [];

            $(rows).each(function(i, obj) {

                ids.push($(obj).attr("data-id"));
            });

            listing.addElements(token, ids);
        }

        /**
         * permet de sélectionner tous les membres contenus dans la table datatable initialisée
         */
        function selectAll() {

            $('#effectifs-table tr').addClass('selected');
            var number  = table.rows('.selected').data().length;
            $('.listing-update').text(number);
        }

        /**
         * permet de désélectionner tous les membres contenus dans la table datatable initialisée
         */
        function deselectAll() {

            $('#effectifs-table tr').removeClass('selected');
            $('.listing-update').text(0);
        }

    </script>
{% endblock %}